/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Model.item;
import controller.MyConnection;
import controller.inventoryBalanceDb;
import controller.itemDb;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author samrit
 */
public class AddItem extends javax.swing.JInternalFrame {

    /**
     * Creates new form AddItem
     */
    int itmId;
    String itmName;
    String iUnit;
    float qunUni;
    itemDb itemDb = new itemDb();
    float bgQty;
    String transId;
    Connection con;
    ResultSet rs;
    PreparedStatement ps;
    DefaultTableModel model;
    inventoryBalanceDb invDb = new inventoryBalanceDb();
    
    
    public AddItem() {
        initComponents();
      //  begQty.setText("0");
//        itemDb.autoId();
        
        Dimension screensize = Toolkit.getDefaultToolkit().getScreenSize();
        int width = (int)screensize.getWidth();
        int height = (int)screensize.getHeight();
        setSize(width-180, height-40);
       
        ArrayList<item> list = itemDb.TableGenerator();
        Object rowData[] = new Object[4];
   
        model =  (DefaultTableModel) itemTable.getModel();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        itemTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );
        
       
        model.setRowCount(0); 
        
        for(int i=0; i<list.size(); i++){
            
            rowData[0] = list.get(i).getItemId();
            rowData[1] = list.get(i).getItemName();
            rowData[2] = list.get(i).getUnit();
            rowData[3] = list.get(i).getQtyperunit();
            
           
            model.addRow(rowData);
        }
           
        
           
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        itemId = new javax.swing.JTextField();
        itemName = new javax.swing.JTextField();
        iQtunt = new javax.swing.JTextField();
        updateItem = new javax.swing.JButton();
        addItem = new javax.swing.JButton();
        iUnt = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();

        setResizable(true);
        setPreferredSize(new java.awt.Dimension(1170, 670));

        jPanel1.setBackground(new java.awt.Color(0, 138, 207));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 630));
        jPanel1.setPreferredSize(new java.awt.Dimension(1170, 670));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Sitka Small", 1, 16)); // NOI18N
        jLabel1.setText("Id");

        jLabel2.setFont(new java.awt.Font("Sitka Small", 1, 16)); // NOI18N
        jLabel2.setText("Quantity/Unit");

        jLabel3.setFont(new java.awt.Font("Sitka Small", 1, 16)); // NOI18N
        jLabel3.setText("Unit");

        jLabel4.setFont(new java.awt.Font("Sitka Small", 1, 16)); // NOI18N
        jLabel4.setText("Item Name");

        itemId.setEditable(false);
        itemId.setFont(new java.awt.Font("Sitka Small", 1, 12)); // NOI18N

        itemName.setFont(new java.awt.Font("Sitka Small", 1, 12)); // NOI18N
        itemName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemNameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                itemNameKeyTyped(evt);
            }
        });

        iQtunt.setFont(new java.awt.Font("Sitka Small", 1, 12)); // NOI18N
        iQtunt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                iQtuntKeyTyped(evt);
            }
        });

        updateItem.setFont(new java.awt.Font("Sitka Small", 1, 16)); // NOI18N
        updateItem.setText("Update");
        updateItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateItemActionPerformed(evt);
            }
        });

        addItem.setFont(new java.awt.Font("Sitka Small", 1, 16)); // NOI18N
        addItem.setText("Add");
        addItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemActionPerformed(evt);
            }
        });

        iUnt.setFont(new java.awt.Font("Sitka Small", 1, 12)); // NOI18N
        iUnt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Unit", "PCS", "KG", "SET", "PACKAGE" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(addItem, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(updateItem, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(iQtunt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(iUnt, javax.swing.GroupLayout.Alignment.LEADING, 0, 181, Short.MAX_VALUE)
                            .addComponent(itemName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemId, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(167, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addItem, updateItem});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iUnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(iQtunt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(102, 102, 102)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateItem, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addItem, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(121, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {iQtunt, iUnt, itemId, itemName, jLabel1, jLabel2, jLabel3, jLabel4});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addItem, updateItem});

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Sitka Small", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Add Item Form");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(328, 328, 328)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Item Name", "Unit", "Qty/Unit"
            }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class,
                java.lang.Integer.class, java.lang.String.class, javax.swing.Icon.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }

            public Class getColumnClass(int columnIndex){
                return types [columnIndex];
            }

        });
        itemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(itemTable);

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1154, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean verifText(){
            if( itemName.getText().equals("") || iQtunt.getText().equals("")
                   || iUnt.getSelectedIndex()==0 )
                 
            {                  
                JOptionPane.showMessageDialog(null, "One or More Empty Field");

                
                 return false; 
        
            }
          
            
         return true;
     
    }
    
    public void filer(String query){
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter(model);
        itemTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }
    
    private void addItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemActionPerformed
      if( verifText()){
            
            itmName = itemName.getText();
            iUnit = iUnt.getSelectedItem().toString();
            qunUni = Float.parseFloat(iQtunt.getText());
          //  bgQty= Float.parseFloat(begQty.getText());
          //  transId = itemIdtransactionId.getText();
            
    
    
        if(!itemDb.isTenantExist(itmName)){
          
                    itemDb.insert( itmName,iUnit , qunUni);
                   // invDb.insertInventory(transId, "2020-07-07", itmId, bgQty, 0);
                   // itemDb.insertqty(itmId, bgQty);
                   
                    
                    //itemDb.autoId();
                    itemId.setText("");
                    itemName.setText("");
                    iUnt.setSelectedIndex(0);
                    iQtunt.setText("");
                   // begQty.setText("0");
                     
          }else{
          JOptionPane.showMessageDialog(rootPane, "Item already Exist");
          }   
                  
                
      }
          ArrayList<item> list = itemDb.TableGenerator();
        Object rowData[] = new Object[4];
   
        model =  (DefaultTableModel) itemTable.getModel();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        itemTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );
       
       
        model.setRowCount(0); 
        
        for(int i=0; i<list.size(); i++){
            
            rowData[0] = list.get(i).getItemId();
            rowData[1] = list.get(i).getItemName();
            rowData[2] = list.get(i).getUnit();
            rowData[3] = list.get(i).getQtyperunit();
            
           
            model.addRow(rowData);
        }
           
        
    
    }//GEN-LAST:event_addItemActionPerformed

    private void updateItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateItemActionPerformed
         if( verifText()){
        
        itmId = Integer.parseInt(itemId.getText());
         itmName = itemName.getText();
         iUnit = iUnt.getSelectedItem().toString();
         qunUni = Float.parseFloat(iQtunt.getText());
         // bgQty= Float.parseFloat(begQty.getText());
         // transId = itemIdtransactionId.getText();
          
               if(itemDb.isItemid(itmId)){
                   System.out.println("hi1");
                    itemDb.update( itmId,itmName,iUnit , qunUni);
                   // itemDb.insertqty(itmId, bgQty);
                    System.out.println("hi2");
       
                  //  invDb.inventoryUpdate(transId, "2019-07-07", itmId, bgQty, 0);
                    System.out.println("hi2");
                    itemId.setText("");
                    itemName.setText("");
                    iUnt.setSelectedIndex(0);
                    iQtunt.setText("");
                   // begQty.setText("0");
              
      }
          
        ArrayList<item> list = itemDb.TableGenerator();
        Object rowData[] = new Object[4];
   
        model =  (DefaultTableModel) itemTable.getModel();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        itemTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );
        
       
        model.setRowCount(0); 
        
        for(int i=0; i<list.size(); i++){
            
            rowData[0] = list.get(i).getItemId();
            rowData[1] = list.get(i).getItemName();
            rowData[2] = list.get(i).getUnit();
            rowData[3] = list.get(i).getQtyperunit();
         
           
            model.addRow(rowData);
        }
           
         }   
    }//GEN-LAST:event_updateItemActionPerformed

    private void iQtuntKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iQtuntKeyTyped
           
        char c = evt.getKeyChar();
        if(Character.isLetter(c)&&!evt.isAltDown()){
            evt.consume();
    }                           
    }//GEN-LAST:event_iQtuntKeyTyped

    private void itemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemTableMouseClicked
        int selectedRow = itemTable.getSelectedRow();
        TableModel tm = itemTable.getModel();
        
        itemId.setText(tm.getValueAt(selectedRow, 0).toString());
        itemName.setText(tm.getValueAt(selectedRow, 1).toString());
        iUnt.setSelectedItem(tm.getValueAt(selectedRow, 2).toString());
        iQtunt.setText(tm.getValueAt(selectedRow,3).toString());
      //  begQty.setText(tm.getValueAt(selectedRow, 4).toString());
     //  itemIdtransactionId.setText(tm.getValueAt(selectedRow,5).toString());
    }//GEN-LAST:event_itemTableMouseClicked

    private void itemNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemNameKeyTyped
         if(itemName.getText().length() >= 30){
            evt.consume();
        }
    }//GEN-LAST:event_itemNameKeyTyped

    private void itemNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemNameKeyPressed

    }//GEN-LAST:event_itemNameKeyPressed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
          ArrayList<item> list = itemDb.SearchTableGenerator();
        Object rowData[] = new Object[6];
   
        model =  (DefaultTableModel) itemTable.getModel();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        itemTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(4).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
       
        model.setRowCount(0); 
        
        for(int i=0; i<list.size(); i++){
            
            rowData[0] = list.get(i).getItemId();
            rowData[1] = list.get(i).getItemName();
            rowData[2] = list.get(i).getUnit();
            rowData[3] = list.get(i).getQtyperunit();
            rowData[4] = list.get(i).getBegQty();
            rowData[5] = list.get(i).getTransactionId();
           
            model.addRow(rowData);
        }
        
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
//         String query = txtsearch.getText().toUpperCase();
//         filer(query); 


/*
        ArrayList<item> list = itemDb.SearchTableGenerator();
        Object rowData[] = new Object[6];
   
        model =  (DefaultTableModel) itemTable.getModel();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        itemTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(4).setCellRenderer( centerRenderer );
        itemTable.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
       
        model.setRowCount(0); 
        
        for(int i=0; i<list.size(); i++){
            
            rowData[0] = list.get(i).getItemId();
            rowData[1] = list.get(i).getItemName();
            rowData[2] = list.get(i).getUnit();
            rowData[3] = list.get(i).getQtyperunit();
            rowData[4] = list.get(i).getBegQty();
            rowData[5] = list.get(i).getTransactionId();
           
            model.addRow(rowData);
        }
        
 */
    }//GEN-LAST:event_txtSearchKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addItem;
    private javax.swing.JTextField iQtunt;
    private javax.swing.JComboBox<String> iUnt;
    private javax.swing.JTextField itemId;
    private javax.swing.JTextField itemName;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField txtSearch;
    private javax.swing.JButton updateItem;
    // End of variables declaration//GEN-END:variables
}
